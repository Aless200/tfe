{#{% extends 'base.html.twig' %}#}

{#{% block title %}Saisie des Scores | Pétanque Club Manager{% endblock %}#}

{#{% block title %}Saisie des Scores | Pétanque Club Manager{% endblock %}#}

{% block body %}
    <title>Saisie des Scores | Pétanque Club Manager</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        primary: '#0d079f',
                        'primary-hover': '#0a0580'
                    }
                }
            }
        }
    </script>
    <div class="min-h-screen bg-gray-50 flex flex-col relative overflow-hidden">
        <div class="absolute inset-0 z-0 overflow-hidden">
            <div class="absolute top-20 right-10 w-32 h-32 sm:w-64 sm:h-64 rounded-full bg-[#0d079f]/5"></div>
            <div class="absolute -bottom-20 -left-20 w-48 h-48 sm:w-96 sm:h-96 rounded-full bg-[#0d079f]/10"></div>
            <div class="absolute top-1/4 left-1/4 w-8 h-8 sm:w-16 sm:h-16 rounded-full border-2 border-gray-400/25"></div>
            <div class="absolute bottom-1/3 right-1/4 w-6 h-6 sm:w-12 sm:h-12 rounded-full border-2 border-gray-400/25"></div>
            <div class="absolute top-2/3 left-1/3 w-5 h-5 sm:w-10 sm:h-10 rounded-full border-2 border-gray-400/25"></div>
        </div>

        <header class="relative z-10 bg-[#0d079f] text-white shadow-md">
            <div class="container mx-auto px-4 py-3">
                <div class="flex items-center justify-center sm:justify-start">
                    <div class="h-10 w-10 sm:h-12 sm:w-12 overflow-hidden rounded-full border-2 border-white p-1 mr-3">
                        <img src="{{ asset('images/bouleHeader.png') }}" alt="Boule de pétanque" class="h-full w-full object-cover" />
                    </div>
                    <h1 class="text-xl sm:text-2xl font-bold">Espace Arbitre</h1>
                </div>
            </div>
        </header>

        <main class="flex-grow container mx-auto px-4 py-4 sm:py-8 relative z-10">
            <div class="max-w-2xl mx-auto">
                <div class="text-center mb-6">
                    <h2 class="text-2xl sm:text-3xl font-extrabold text-gray-900 mb-2">Saisie des Scores</h2>
                    <p class="text-sm sm:text-base text-gray-600">Enregistrez les résultats des matchs du Tour {{ currentRound }}</p>
                </div>

                {% if games is empty %}
                    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-6 rounded-lg shadow-md">
                        <div class="flex items-center">
                            <svg class="h-8 w-8 text-yellow-400 mr-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                            </svg>
                            <p class="text-lg text-yellow-700">Tous les matchs de ce tour sont terminés. Attendez la génération du tour suivant.</p>
                        </div>
                    </div>
                {% else %}
                    {% for game in games %}
                        <form id="scoreForm-{{ game.id }}" method="post" action="{{ path('app_arbitrator_save_score') }}" class="bg-white rounded-xl shadow-lg overflow-hidden mb-6">
                            <input type="hidden" name="gameId" value="{{ game.id }}">
                            <input type="hidden" name="team1Id" value="{{ game.team1.id }}">
                            <input type="hidden" name="team2Id" value="{{ game.team2.id }}">
                            <div class="bg-[#0d079f] px-4 sm:px-6 py-3 sm:py-4 text-white">
                                <h3 class="text-lg sm:text-xl font-semibold text-center">
                                    {{ game.team1.teamName }} vs {{ game.team2.teamName }}
                                </h3>
                            </div>

                            <div class="p-4 sm:p-6">
                                <div class="space-y-6">
                                    <div class="bg-gray-50 rounded-xl p-4 sm:p-6 border border-gray-200">
                                        <h4 class="text-lg font-bold text-gray-700 text-center mb-4">{{ game.team1.teamName }}</h4>
                                        <div class="flex items-center justify-center">
                                            <button type="button" onclick="decrementScore('{{ game.id }}', 'Team1')" class="w-12 h-12 sm:w-14 sm:h-14 flex items-center justify-center bg-red-500 hover:bg-red-600 text-white rounded-full shadow-md transition-colors touch-manipulation">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                                                </svg>
                                            </button>
                                            <input type="number" id="scoreTeam1-{{ game.id }}" name="scoreTeam1" value="{{ game.scoreTeam1|default(0) }}" min="0" max="13" readonly class="mx-3 sm:mx-4 w-16 h-16 sm:w-20 sm:h-20 text-center text-2xl sm:text-4xl font-bold border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-[#0d079f] focus:border-[#0d079f] bg-white cursor-default">
                                            <button type="button" onclick="incrementScore('{{ game.id }}', 'Team1')" class="w-12 h-12 sm:w-14 sm:h-14 flex items-center justify-center bg-green-500 hover:bg-green-600 text-white rounded-full shadow-md transition-colors touch-manipulation">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-center gap-2 sm:gap-4 mb-6">
                                        <span class="text-lg sm:text-xl font-bold text-gray-500">VS</span>
                                    </div>
                                    <div class="bg-gray-50 rounded-xl p-4 sm:p-6 border border-gray-200">
                                        <h4 class="text-lg font-bold text-gray-700 text-center mb-4">{{ game.team2.teamName }}</h4>
                                        <div class="flex items-center justify-center">
                                            <button type="button" onclick="decrementScore('{{ game.id }}', 'Team2')" class="w-12 h-12 sm:w-14 sm:h-14 flex items-center justify-center bg-red-500 hover:bg-red-600 text-white rounded-full shadow-md transition-colors touch-manipulation">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
                                                </svg>
                                            </button>
                                            <input type="number" id="scoreTeam2-{{ game.id }}" name="scoreTeam2" value="{{ game.scoreTeam2|default(0) }}" min="0" max="13" readonly class="mx-3 sm:mx-4 w-16 h-16 sm:w-20 sm:h-20 text-center text-2xl sm:text-4xl font-bold border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-[#0d079f] focus:border-[#0d079f] bg-white cursor-default">
                                            <button type="button" onclick="incrementScore('{{ game.id }}', 'Team2')" class="w-12 h-12 sm:w-14 sm:h-14 flex items-center justify-center bg-green-500 hover:bg-green-600 text-white rounded-full shadow-md transition-colors touch-manipulation">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 sm:h-8 sm:w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
{#                                    {% if grounds|length > 0 %}#}
{#                                        <div class="mb-4">#}
{#                                            <label for="ground-{{ game.id }}" class="block text-sm font-medium text-gray-700 mb-2">Terrain</label>#}
{#                                            <select id="ground-{{ game.id }}" name="ground" class="block w-full px-3 py-2 sm:px-4 sm:py-3 border border-gray-300 rounded-lg text-gray-900 focus:outline-none focus:ring-[#0d079f] focus:border-[#0d079f] text-sm sm:text-base">#}
{#                                                {% for ground in grounds %}#}
{#                                                    <option value="{{ ground.id }}" {% if game.ground and game.ground.id == ground.id %}selected{% endif %}>{{ ground.name }}</option>#}
{#                                                {% endfor %}#}
{#                                            </select>#}
{#                                        </div>#}
{#                                    {% endif %}#}
                                </div>
                                <div class="mt-6">
                                    <button type="button" onclick="showConfirmationModal('{{ game.id }}')" class="w-full inline-flex justify-center items-center py-3 px-6 border border-transparent shadow-sm text-base font-medium rounded-lg text-white bg-[#0d079f] hover:bg-[#0a0580] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0d079f] transition-colors touch-manipulation">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                        </svg>
                                        Enregistrer le score
                                    </button>
                                </div>
                            </div>
                        </form>
                    {% endfor %}
                {% endif %}
            </div>
        </main>

        <footer class="bg-white py-3 sm:py-4 border-t border-gray-200 relative z-10">
            <div class="container mx-auto px-4 text-center text-xs sm:text-sm text-gray-500">
                <p>© {{ "now"|date("Y") }} Pétanque Club Manager. Tous droits réservés.</p>
            </div>
        </footer>
    </div>

    <div id="confirmationModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 hidden">
        <div class="relative top-20 mx-auto p-5 border w-11/12 max-w-md shadow-lg rounded-md bg-white">
            <div class="mt-3 text-center">
                <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-yellow-100">
                    <svg class="h-6 w-6 text-yellow-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                </div>
                <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Confirmer le score</h3>
                <div class="mt-2 px-7 py-3">
                    <p class="text-sm text-gray-500" id="confirmationText">
                        Êtes-vous sûr de vouloir enregistrer ce score ?
                    </p>
                </div>
                <div class="items-center px-4 py-3">
                    <div class="flex flex-col sm:flex-row gap-3">
                        <button id="confirmBtn" onclick="confirmScore()" class="px-4 py-2 bg-[#0d079f] text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-[#0a0580] focus:outline-none focus:ring-2 focus:ring-[#0d079f]">
                            Confirmer
                        </button>
                        <button onclick="hideConfirmationModal()" class="px-4 py-2 bg-gray-300 text-gray-800 text-base font-medium rounded-md w-full shadow-sm hover:bg-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-300">
                            Annuler
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function incrementScore(gameId, team) {
            const scoreInput = document.getElementById(`score${team}-${gameId}`);
            let currentScore = parseInt(scoreInput.value);

            if (currentScore < 13) {
                scoreInput.value = currentScore + 1;

                scoreInput.classList.add('ring-4', 'ring-green-200');
                setTimeout(() => {
                    scoreInput.classList.remove('ring-4', 'ring-green-200');
                }, 300);

                if (currentScore + 1 >= 13) {
                    highlightWinningScore(gameId, team);
                }
            }
        }

        function decrementScore(gameId, team) {
            const scoreInput = document.getElementById(`score${team}-${gameId}`);
            let currentScore = parseInt(scoreInput.value);
            if (currentScore > 0) {
                scoreInput.value = currentScore - 1;

                scoreInput.classList.add('ring-4', 'ring-red-200');
                setTimeout(() => {
                    scoreInput.classList.remove('ring-4', 'ring-red-200');
                }, 300);

                if (currentScore === 13) {
                    resetScoreHighlight(gameId, team);
                }
            }
        }

        function highlightWinningScore(gameId, team) {
            const scoreInput = document.getElementById(`score${team}-${gameId}`);
            scoreInput.classList.add('bg-green-100', 'border-green-500');
        }

        function resetScoreHighlight(gameId, team) {
            const scoreInput = document.getElementById(`score${team}-${gameId}`);
            scoreInput.classList.remove('bg-green-100', 'border-green-500');
        }

        function showConfirmationModal(gameId) {
            const form = document.getElementById(`scoreForm-${gameId}`);
            const team1Name = form.querySelector('h3').textContent.split(' vs ')[0].trim();
            const score1 = form.querySelector('input[name="scoreTeam1"]').value;
            const team2Name = form.querySelector('h3').textContent.split(' vs ')[1].trim();
            const score2 = form.querySelector('input[name="scoreTeam2"]').value;

            // Validation des scores
            if (!validateScores(score1, score2)) {
                return;
            }

            const confirmationText = `${team1Name}: ${score1} - ${team2Name}: ${score2}`;
            document.getElementById('confirmationText').innerHTML =
                `Êtes-vous sûr de vouloir enregistrer ce score ?<br><strong>${confirmationText}</strong>`;
            document.getElementById('confirmBtn').setAttribute('data-game-id', gameId);

            document.getElementById('confirmationModal').classList.remove('hidden');
        }

        function hideConfirmationModal() {
            document.getElementById('confirmationModal').classList.add('hidden');
        }

        function confirmScore() {
            const gameId = document.getElementById('confirmBtn').getAttribute('data-game-id');
            document.getElementById(`scoreForm-${gameId}`).submit();
            hideConfirmationModal();
        }

        function validateScores(score1, score2) {
            if (score1 === "" || score2 === "") {
                alert("Les scores ne peuvent pas être vides");
                return false;
            }
            if (parseInt(score1) === parseInt(score2)) {
                alert("Match nul interdit.");
                return false;
            }
            if (parseInt(score1) < 13 && parseInt(score2) < 13) {
                alert("Une équipe doit atteindre 13 points.");
                return false;
            }
            return true;
        }

        // Fermer le modal en cliquant à l'extérieur
        document.getElementById('confirmationModal').addEventListener('click', function(e) {
            if (e.target === this) {
                hideConfirmationModal();
            }
        });
    </script>
{% endblock %}